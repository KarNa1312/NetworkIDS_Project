name: CI/CD Pipeline - Build and Deploy Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  # Job 1: Build and Test
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v4
        with:
          lfs: true  # Pull Git LFS files (your model files)
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Install testing tools
      
      - name: Verify project structure
        run: |
          echo "📁 Verifying project structure..."
          ls -la
          echo "✅ Project files present"
      
      - name: Run automated tests with pytest
        run: |
          echo "🧪 Running automated tests..."
          pytest tests/ -v --tb=short --color=yes
          echo "✅ All tests passed!"
      
      - name: Test Python imports
        run: |
          echo "📦 Testing package imports..."
          python -c "import streamlit; import pandas; import numpy; import sklearn; print('✅ All imports successful')"
      
      - name: Validate Dockerfile exists
        run: |
          if [ -f "Dockerfile" ]; then
            echo "✅ Dockerfile found"
          else
            echo "❌ Dockerfile missing"
            exit 1
          fi
      
      - name: Validate Kubernetes manifests
        run: |
          if [ -d "k8s" ]; then
            echo "✅ Kubernetes manifests folder found"
            ls -la k8s/
          else
            echo "⚠️ Warning: k8s folder not found"
          fi

  # Job 2: Build and Push Docker Image (only on main branch)
  docker-build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test  # Only runs if build-and-test succeeds
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: karna1312/network-ids-app
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=semver,pattern={{version}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=karna1312/network-ids-app:latest
          cache-to: type=inline
      
      - name: Docker image digest
        run: |
          echo "✅ Docker image pushed successfully!"
          echo "📦 Tags: ${{ steps.meta.outputs.tags }}"
          echo "🔗 Pull command: docker pull karna1312/network-ids-app:latest"
      
      - name: Create deployment summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Build Status:** Success" >> $GITHUB_STEP_SUMMARY
          echo "📦 **Docker Image:** karna1312/network-ids-app:latest" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Docker Hub:** https://hub.docker.com/r/karna1312/network-ids-app" >> $GITHUB_STEP_SUMMARY
          echo "📝 **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "👤 **Author:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

  # Job 3: Security Scan (Optional but professional)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'karna1312/network-ids-app:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true  # Don't fail build on vulnerabilities
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
